@model NovoePokolenie.ViewModels.BranchViewModel
@using NovoePokolenie.Helpers

@inject NovoePokolenie.Services.StudentService _studentService; 

@{ 
    var scheduleDay = "";
    DateTime now = DateTime.Now;
}

<div class="group_container flex_evenly">
    @{ 
        for(int i = 0; i<Model.Groups.Count;)
        {
            <div>
                @{ 
                    scheduleDay = StHel.ScheduleDays(Model.Groups[i].TimeTable);
                    while(scheduleDay == StHel.ScheduleDays(Model.Groups[i].TimeTable))
                    {
                        <p>
                            <a href="@Url.Action("GroupAttendance", "Attendance", new { groupId = Model.Groups[i].Id, month = now.Month, year = now.Year })"
                                data-ajax="true"
                                data-ajax-mode="replace"
                                data-ajax-update="#attendance">
                                    @StHel.TimeTableToShortString(Model.Groups[i].TimeTable)
                                &nbsp;
                                @(await _studentService.GetStudentMentorNameAsync(Model.Groups[i].Id))
                            </a>
                        </p>

                        i++;
                        if (i == Model.Groups.Count) break;
                    }
                }
            </div>
        }
    }
</div>
<div id="attendance">

</div>
