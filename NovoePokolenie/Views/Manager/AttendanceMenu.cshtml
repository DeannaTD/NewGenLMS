@model List<Branch>
@inject NovoePokolenie.Services.StudentService _studentService;
@inject NovoePokolenie.Services.GroupService _groupService;
@using NovoePokolenie.Helpers;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    DateTime now = DateTime.Now;
}

<style>
    .branchContainer {
        display: flex;
        justify-content: space-around;
    }

    .branchBlock > div,
    .branchBlock > a {
        padding: 1rem;
        border: 1px solid gray;
        text-align: center;
        display: block;
        text-decoration: none;
    }

        .branchBlock > div:hover,
        .branchBlock > a:hover {
            background-color: #444;
            cursor: pointer;
        }

    .branchBlock__header {
        background-color: #111;
    }
</style>

<div class="branchContainer">
    @foreach (Branch branch in Model)
    {
        <div class="branchBlock">
            <div class="branchBlock__header">@branch.Name</div>
            @{
                List<Group> groups = await _groupService.GetGroupsByBranchIdAsync(branch.Id);
                groups.Sort((g1, g2) => StHel.CompareTimeTables(g1.TimeTable, g2.TimeTable));
            }
            @foreach (Group group in groups)
            {
                <a href="@Url.Action("GroupAttendanceNew", "Attendance", new { groupId = group.Id, date = DateTime.Now })">
                    @StHel.TimeTableToShortString(group.TimeTable)
                </a>
            }
        </div>
    }
</div>
