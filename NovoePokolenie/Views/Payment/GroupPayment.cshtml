@model List<NovoePokolenie.ViewModels.PaymentsViewModel>
    @{ int i = 0; }

    <div>
        <table class="table table_bordered" id="students_table">
            <tr>
                <th>
                    #
                </th>
                <th id="sort_byname">
                    ФИО
                </th>
                <th>
                    Телефон
                </th>
                <th id="sort_bydebt">
                    Долг
                </th>
                <th>
                    Стоимость
                </th>
                <th>
                    Оплачено
                </th>
                <th>
                    Месяцев
                </th>
                <th>
                    Последняя оплата
                </th>
            </tr>
            @foreach (var student in Model)
            {
                <tr>
                    @{
                        var sum = 0;
                        long debbt = 0;
                        DateTime LastPayment = new DateTime(1,1,1);
                        foreach(var period in student.PaymentPeriods){
                            foreach(var payment in period.Payments){
                                sum += payment.PaymentAmount;
                                if(DateTime.Compare(LastPayment, payment.PaymentCreated) < 0) LastPayment = payment.PaymentCreated;
                            }
                            debbt += period.MustTotal;
                        }
                        debbt -= sum;

                        string LastPaymentString = NovoePokolenie.Helpers.StHel.GetFormatedDate(LastPayment);
                    }
                    <td>
                        @(++i)
                    </td>
                    <td>
                        <a href="@Url.Action("GetStudentPeriodsList", "Payment", new { UserId = student.StudentId })">
                            @(student.FirstName + " " + student.LastName)
                        </a>
                    </td>
                    <td>
                        @student.PhoneNumber
                    </td>
                    <td>
                        @debbt
                    </td>
                    <td>
                        @student.Total
                    </td>
                    <td>
                        @sum
                    </td>
                    <td>
                        @student.PaymentPeriods.Count
                    </td>
                    <td>
                        @(LastPaymentString == "1/01/1" ? "-" : LastPaymentString)
                    </td>
                </tr>
             }
             </table>
        </div>

<script>
    $('#sort_bydebt').on('click', event => {
        let rows = $($('table').children()[0]).children('tr:not(:first-child)');
        console.log(rows)
        rows.sort(function (x, y) {
            let d1 = $(x).children()[2].innerText;
            let d2 = $(y).children()[2].innerText;
            return Number(d2) - Number(d1);
        });
        $('tbody').children('tr:not(:first-child)').remove();
        console.log(rows)
        for (let i = 0; i < rows.length; i++) {
            rows[i].children[0].innerText = i + 1;
            $('tbody').append(rows[i]);
        }
    });

    $('#sort_byname').on('click', event => {
        let rows = $($('table').children()[0]).children('tr:not(:first-child)');
        console.log(rows)
        rows.sort(function (x, y) {
            let d1 = $(x).children()[1].innerText;
            let d2 = $(y).children()[1].innerText;
            return d1 < d2 ? -1 : d1 > d2 ? 1 : 0;
        });
        $('tbody').children('tr:not(:first-child)').remove();
        console.log(rows)
        for (let i = 0; i < rows.length; i++) {
            rows[i].children[0].innerText = i + 1;
            $('tbody').append(rows[i]);
        }
    });
</script>