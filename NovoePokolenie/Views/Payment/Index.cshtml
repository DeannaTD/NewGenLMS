@using NovoePokolenie.Helpers;
@inject NovoePokolenie.Services.BranchService _branchService;

@model List<NPUser>
@{
    int index = 0;

    long GetDebt(NPUser student)
    {
        long totalSum = 0;
        long payed = 0;
        foreach (PaymentPeriod period in student.PaymentPeriods)
        {
            totalSum += period.MustTotal;
            foreach (Payment payment in period.Payments)
            {
                payed += payment.PaymentAmount;
            }
        }
        return -(payed - totalSum);
    }
    var branches = await _branchService.GetBranchesAsync();
}

<ul class="menu-list fj-sb fs-second">
    @foreach (var branch in branches)
    {
        <li>
            @Html.ActionLink(branch.Name, "SortedIndex", "Payment", new StFilter(FilterOption.Branch, branch.Id))
        </li>
    }
</ul>

@{
    <table class="table table_bordered">
        <tr>
            @*<th>№</th>*@
            <th>
                <span id="sort_firstname">Имя</span>
                /
                <span id="sort_lastname">Фамилия</span>
            </th>
            <th>
                Телефон
            </th>
            <th>
                Оплата
            </th>
            <th>
                <span id="sort_debt">Долг</span>
            </th>
            <th>
                <span id="sort_date">Дата</span>
            </th>
        </tr>
        @foreach (NPUser student in Model)
        {
            index++;
            <tr>
                @*<td>@index</td>*@
                <td id="row_name">
                    <a asp-action="StudentPaymentCard" asp-controller="Payment" asp-route-studentId="@student.Id">
                        <span data-name="lastname">@student.Lastname</span>
                        <span data-name="firstname">@student.FirstName</span>
                    </a>
                </td>
                <td id="row_number">
                    <span data-name="">@student.PhoneNumber</span>
                </td>
                <td id="row_price">
                    <span data-name="">@student.PaymentCharge</span>
                </td>
                <td id="row_debt">
                    <span data-name="debt">@GetDebt(student)</span>
                </td>
                <td id="row_date">
                    @if (student.PaymentPeriods.Count != 0)
                    {
                        @student.PaymentPeriods.Last().PaymentEnd.ToString(@"dd/MM/yyyy")
                    }
                </td>
            </tr>
        }
    </table>
}

<script>
    let r;
    function sortTableByOption(event, dataName) {
        let table = $(event.currentTarget).parents('table');
        let rows = $(table).find('tr');
        let headers = rows.splice(0, 1);
        for (let i = 0; i < rows.length; i++) {
            for (let j = 0; j < rows.length - i - 1; j++) {
                let v1 = $(rows[j]).find("[data-name='" + dataName + "']");
                let v2 = $(rows[j + 1]).find("[data-name='" + dataName + "']");
                if (v1.text() > v2.text()) {
                    let tmp = rows[j];
                    rows[j] = rows[j + 1];
                    rows[j + 1] = tmp;
                }
            }
        }

        $(table).empty();
        $(table).append(headers);
        $(table).append(rows);
    }

    $('#sort_firstname').on('click', (event) => {
        sortTableByOption(event, "firstname");
    });

    $('#sort_lastname').on('click', (event) => {
        sortTableByOption(event, "lastname");
    });

    $('#sort_debt').on('click', (event) => {
        sortTableByOption(event, "debt");
    });
</script>