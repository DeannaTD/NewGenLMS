@model NPUser
@{
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}
@{
    long GetDebt(NPUser student)
    {
        long totalSum = 0;
        long paid = 0;
        foreach(PaymentPeriod period in student.PaymentPeriods)
        {
            totalSum += period.MustTotal;
            foreach(Payment payment in period.Payments)
            {
                paid += payment.PaymentAmount;
            }
        }
        return -(paid - totalSum);
    }

    long GetPeriodDebt(PaymentPeriod period)
    {
        long paid = 0;
        foreach (Payment payment in period.Payments)
            paid += payment.PaymentAmount;
        return -(paid - period.MustTotal);
    }

    DateTime GetLastPaidDate(PaymentPeriod period)
    {
        if (period.Payments.Count == 0) return DateTime.MinValue;
        return period.Payments.Last().PaymentCreated;
    }
}
<table class="table table_bordered w-60 center-table">
    <tr>
        <th>Имя</th>
        <th>Номер</th>
        <th>Оплата</th>
        <th>Долг</th>
    </tr>
    <tr>
         <td>@Model.Lastname @Model.FirstName</td>
         <td>@Model.PhoneNumber</td>
         <td>@Model.PaymentCharge</td>
         <td id="total-debt-td">@GetDebt(Model)</td>
    </tr>
</table>
<button id="add-period" class="button button_green">Добавить новый период</button>
<div class="flex gap-2">
<div class="page-small adapt-small">
<table class="table table_bordered_up w-100" id="payments-table">
    <tr>
        <th>Период</th>
        <th>Стоимость</th>
        <th>Долг</th>
        <th>Дата оплаты</th>
        <th></th>
    </tr>
@foreach(PaymentPeriod period in Model.PaymentPeriods)
{
    <tr data-periodId="@period.Id">
        <td class="w-40">
            <form asp-action='ChangePeriodDates' asp-controller='Payment' data-ajax='true' data-ajax-failure="ErrorAjax()">
                <input class='trigger-input table-input' type='date' name='PaymentStart' value='@period.PaymentStart.ToString("yyyy-MM-dd")'>
                -
                <input class='trigger-input table-input' type='date' name='PaymentEnd' value='@period.PaymentEnd.ToString("yyyy-MM-dd")'>
                <input type='text' class='hidden' name='periodId' value='@period.Id'>
            </form>
        </td>
        <td class="w-10 text-center">
            @period.MustTotal
        </td>
        <td class="w-10 text-center debt-td" id="@period.Id">
            @GetPeriodDebt(period)
        </td>
        <td class="w-30 date-cell">
            @{
                var date = GetLastPaidDate(period);
                if(date != DateTime.MinValue) @date.ToString(@"dd/MM/yyyy");
             }
        </td>
        <td class="w-10 text-center">
            <a class="invoice" title="Чеки"
                data-ajax="true"
                data-ajax-mode="replace"
                data-ajax-update="#payments-container"
                asp-action="GetPayments"
                asp-asp-controller="Payment"
                asp-route-PeriodId="@period.Id">
                <i class="fas fa-file-invoice"></i>
            </a>
            <a class="text-error delete-period" title="Удалить" 
                asp-action="DeletePaymentPeriod"
                asp-controller="Payment"
                asp-route-PeriodId="@period.Id">
                <i class="fas fa-trash-alt"></i>
            </a>
        </td>
    </tr>
}
    <tr id="add-period-row" class="d-none">
        <td colspan="5">
            <form id="add-new-period-form" data-ajax="true">
                <input class="table-input" id="start-date-input" type='date' name='start'>
                -
                <input class="table-input" id="end-date-input" type='date' name='end'>
                <input type="number" name="amount" class="w-10 text-right" value="@Model.PaymentCharge"/>
                <input type="text" class="hidden" value="@Model.Id" name="studentId" />
                <input type="button" value="Добавить" class="button button_green" id="submit-button-form" />
                <input type="button" value="Отмена" class="button button_red" onclick="AddPeriodCancel()" />
            </form>
        </td>
        <td class="w-10 text-center d-none" id="sampleInfoDelete">
            <a class="invoice" title="Чеки"
                data-ajax="true"
                data-ajax-mode="replace"
                data-ajax-update="#payments-container"
                asp-action="GetPayments"
                asp-asp-controller="Payment"
                asp-route-PeriodId="">
                <i class="fas fa-file-invoice"></i>
            </a>
            <a class="text-error delete-period" title="Удалить" 
                asp-action="DeletePaymentPeriod"
                asp-controller="Payment"
                asp-route-PeriodId="">
                <i class="fas fa-trash-alt"></i>
            </a>
        </td>
    </tr>
</table>
</div>
<div id="payments-container" class="fb-30">

</div>
</div>
<script>

    function GetFormatedDate(date)
    {
        return (new Date(Date.parse(date))).toLocaleDateString('it');
    }

    //click on Add New Period button

    function DeletePeriod(event){
        let inputs = $(event.currentTarget).parents('tr').find('input[type=date]');
        let isSure = confirm('Удалить период с ' + GetFormatedDate(inputs[0].value) + " по " + GetFormatedDate(inputs[1].value) + "?");
        if (isSure) {
            $.ajax({
                type: "get",
                url: $(event.currentTarget).attr("href"),
                success: SuccessAjax($(event.currentTarget))
            });
        }
    }
    $(".delete-period").on('click', (event)=>{
        event.preventDefault();
        DeletePeriod(event);
    });

    $("#add-period").on('click', (event) => {
        //showing the ANP row - the last in the table with correct index
        $('#add-period-row').removeClass('d-none');

        //disabling the button
        $('#add-period').prop('disabled', true);
    });

    $('#submit-button-form').on('click', (event) =>{
        let form = $('#add-new-period-form');
        console.log(form);
        $.ajax({
            type: "post",
            url: "/payment/createpaymentperiod2",
            data: form.serialize(),
            success: function(data) {
                var new_row = document.createElement('tr');
                new_row.setAttribute('data-periodId', data);
                var cells = [];

                //cells[1] - form cell
                cells.push(document.createElement('td'));
                let form = document.createElement('form');
                let inputDS = document.createElement('input');
                inputDS.setAttribute('type', 'date');
                inputDS.setAttribute('name', 'PaymentStart');
                inputDS.setAttribute('value', $('#start-date-input').val());
                inputDS.className = 'trigger-input table-input';
                form.appendChild(inputDS);
                form.append(" - ");
                let inputDE = document.createElement('input');
                inputDE.setAttribute('type', 'date');
                inputDE.setAttribute('name', 'PaymentEnd');
                inputDE.setAttribute('value', $('#end-date-input').val());
                inputDE.className = 'trigger-input table-input';
                form.appendChild(inputDE);
                let inputPI = document.createElement('input');
                inputPI.setAttribute('value', data);
                inputPI.setAttribute('name', 'periodId');
                inputPI.className = 'hidden';
                form.appendChild(inputPI);

                form.setAttribute('data-ajax', 'true');
                form.setAttribute('action', '/Payment/ChangePeriodDates');
                form.setAttribute('method', 'post');
                form.setAttribute('data-ajax-failure', 'ErrorAjax()');

                $(inputDE).on('change', (event)=>{
                    $(form).submit();
                });

                $(inputDS).on('change', (event)=>{
                    $(form).submit();
                });

                cells[0].appendChild(form);
                cells[0].className = 'w-40';

                let amount = $('#add-new-period-form').find('[type=number]').val()
                //cells[1] - must total
                cells.push(document.createElement('td'));
                cells[1].className = 'w-10 text-center';
                cells[1].innerHTML = amount;

                //cells[2] - debt (is eq to must total)
                cells.push(document.createElement('td'));
                cells[2].className = 'w-10 text-center debt-td';
                cells[2].setAttribute('id', data);
                cells[2].innerHTML = amount;

                //cells[3] - empty cell with date
                cells.push(document.createElement('td'));
                cells[3].className = 'w-30';

                //cells[4] - info and del cell
                actionCell = $('#sampleInfoDelete').clone();
                $(actionCell).children('a:nth-child(2)').attr('href', ('/Payment/DeletePaymentPeriod?PeriodId=' + data));
                $(actionCell).children('a:nth-child(2)').on('click', (event)=> {
                    DeletePeriod(event);
                });

                $(actionCell).children('a:nth-child(1)').attr('href', ('/Payment/GetPayments?PeriodId=' + data));

                $(actionCell).removeClass('d-none');
                cells[4] = $(actionCell)[0];

                for (let i = 0; i < cells.length; i++) { 
                    new_row.appendChild(cells[i]);
                }

                $(new_row).insertBefore('#add-period-row');

                $('#add-period-row').addClass('d-none');
                $('#add-period').prop('disabled', false);

                let debt = document.getElementById('total-debt-td');
                debt.innerText = (Number(debt.innerText) + Number(amount));
                ChangeDebtCondition();
            }
        })
    });

    $('.trigger-input').on('change', (event)=>{
        let form = $(event.currentTarget).parents('form');
        $(form).submit();
    });

    function ErrorAjax(){
        if(!alert("Возникла ошибка, попробуйте еще раз"))
            window.location.reload();
    }

    function SuccessAjax(link){
        let d = $(link).parents('tr').children('.debt-td').text();
        let debt = document.getElementById('total-debt-td');
        debt.innerText = (Number(debt.innerText) - d);
        ChangeDebtCondition();
        $(link).parents('tr').remove();
        $('#payments-container').text('');
        alert("Период успешно удалён");
    }

    function AddPeriodCancel(){
        $('#add-period-row').addClass('d-none');
        $('#add-period').prop('disabled', false);
    }

    function ChangeDebtCondition(){
        let td = document.getElementById('total-debt-td');
        if (Number(td.innerText) > 0) {
            td.className = "back-error";
        }
        else {
            td.className = "back-ok";
        }
    }

ChangeDebtCondition();
</script>