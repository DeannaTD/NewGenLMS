@using NovoePokolenie.Helpers
@model NovoePokolenie.ViewModels.StudentCardViewModel
@inject NovoePokolenie.Services.GroupService _groupService
@inject NovoePokolenie.Services.BranchService _branchService
@inject NovoePokolenie.Services.AccountService _accountService
@inject NovoePokolenie.Services.LevelService _levelService


@{
    var groups = await _groupService.GetGroupsAsync();
    var mentors = await _accountService.GetAllUsersInRole("Mentor");
    var levels = await _levelService.GetCollectionAsync();
    var action = Model.LevelId == (int)DefaultValues.TrialLevel ? "SaveTrial" : "SaveStudent";
}
<div class="scroll_card">
    <form class="full-form" asp-action="@action" asp-controller="Student" data-ajax="true" data-ajax-begin="startWait()" data-ajax-success="endWait()" id="form" data-trialid="@Model.StudentId">
        <div asp-validation-summary="All" class="validation"></div>
        <input asp-for="StudentId" type="hidden" value="@Model.StudentId" />
        <input asp-for="StatusId" type="hidden" value="@Model.StatusId" />
        <div class="flex">
            <p>@ViewBag.UserName</p>
            <a class="link" href="@Url.Action("Block", "Student", new { studentId = Model.StudentId })">Блок</a>
            <a class="link" href="@Url.Action("MakeArchived", "Student", new {studentId = Model.StudentId, groupId = Model.GroupId})">В архив</a>
        </div>
        <div class="flex">
            <div>
                <label asp-for="FirstName"></label>
                <input asp-for="FirstName" value="@Model.FirstName" class="form-control" />
                <span asp-validation-for="FirstName"></span>
            </div>
            <div>
                <label asp-for="LastName"></label>
                <input asp-for="LastName" value="@Model.LastName" class="form-control" />
                <span asp-validation-for="LastName"></span>
            </div>
        </div>
        <div>
            <label asp-for="ParentName"></label>
            <input asp-for="ParentName" value="@Model.ParentName" />
            <span asp-validation-for="ParentName"></span>
        </div>
        <div class="flex">
            <div>
                <label asp-for="PhoneNumber"></label>
                <input asp-for="PhoneNumber" value="@Model.PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber"></span>
            </div>
            <div>
                <label asp-for="StudentPhoneNumber"></label>
                <input asp-for="StudentPhoneNumber" value="@Model.StudentPhoneNumber" class="form-control" />
                <span asp-validation-for="StudentPhoneNumber"></span>
            </div>
        </div>
        <div class="flex">
            <div>
                <label asp-for="Debt"></label>
                <input asp-for="Debt" value="@Model.Debt" disabled />
                <span asp-validation-for="Debt"></span>
            </div>
            @if (Model.LevelId != (int)DefaultValues.TrialLevel)
            {
                <div>
                    <label asp-for="PaymentCharge"></label>
                    <input asp-for="PaymentCharge" value="@Model.PaymentCharge" />
                    <span asp-validation-for="PaymentCharge"></span>
                </div>
            }
            else
            {
                <a id="createStudentSpan" data-action="@Url.Action("RegisterStudentTrial", "Account")"></a>
            }
        </div>
        <div class="flex">
            <div>
                <label asp-for="DateOfBirth"></label>
                <input asp-for="DateOfBirth" value="@Model.DateOfBirth.ToString("yyyy-MM-ddThh:mm")" class="form-control" />
                <span asp-validation-for="DateOfBirth"></span>
            </div>

            <div>
                <label asp-for="DateOfTrial"></label>
                <input asp-for="DateOfTrial" value="@Model.DateOfTrial.ToString("yyyy-MM-ddThh:mm")" />
                <span asp-validation-for="DateOfTrial"></span>
            </div>

            <div>
                <label asp-for="DateStarted"></label>
                <input asp-for="DateStarted" value="@Model.DateStarted.ToString("yyyy-MM-ddThh:mm")" />
                <span asp-validation-for="DateStarted"></span>
            </div>
        </div>
        <div>
            <label asp-for="LevelId">Уровень</label>
            <select class="form-control" asp-for="@Model.LevelId" id="level-select">
                @{
                    foreach (var level in levels)
                    {
                        <option value="@level.Id">
                            @level.Name
                        </option>
                    }
                }
            </select>
            <span asp-validation-for="LevelId"></span>
        </div>
        <div>
            <label asp-for="Note"></label>
            <input asp-for="Note" value="@Model.Note" />
            <span asp-validation-for="Note"></span>
        </div>
        <div class="flex">
            <div>
                <label asp-for="Group"></label>
                <select class="form-control" asp-for="@Model.GroupId" id="group-select">
                    @{
                        foreach (var group in groups)
                        {
                            <option value="@group.Id" data-mentorId="@group.MentorId">
                                @((await _branchService.GetBranchByIdAsync(group.BranchId)).Name)
                                @NovoePokolenie.Helpers.StHel.TimeTableToString(group.TimeTable)
                            </option>
                        }
                    }
                </select>
                <span asp-validation-for="Group"></span>
            </div>

            <div>
                <label asp-for="MentorName"></label>
                <select asp-for="@Model.MentorId" id="mentor-select" disabled>
                    @{
                        foreach (var mentor in mentors)
                        {
                            <!option value="@mentor.Id" @(mentor.Id == Model.MentorId ? "selected" : "")>
                                @mentor.FirstName
                            </!option>
                        }
                    }
                </select>
                <span asp-validation-for="MentorName"></span>
            </div>
        </div>

        <input type="submit" value="Сохранить" class="accent-button save_button" />
        <!--<input type="button" value="&#x2717 &#x2713" class="close_button" />-->
    </form>
</div>
<script>
    var level = @Model.LevelId;
    var trialLevel = @((int)DefaultValues.TrialLevel);
    var checkTrial = level == trialLevel;
    var groupId = @Model.GroupId;
    var reload = false;

    $("input[type='submit'].save_button").on('click', (event)=>{
        event.preventDefault();

        if ($("select#group-select").val() != groupId){
            reload = true;
        }

        if(checkTrial){
            let checkedLevel = $("select#level-select").val();
            if(checkedLevel != trialLevel){
                let path = $('#createStudentSpan').data('action') + "?trialId=" + $("#form").data("trialid");
                $('#form').attr('action', path);
            }
        }

        $('#form').submit();
        $('#student_card').children().remove();
    });

    $('#group-select').on('change', () => {
        let mentorId = $('#group-select>option:selected').attr('data-mentorId');
        $('#mentor-select option').each(function (index, item) { if (item.value == mentorId) $(item).attr('selected', true); else $(item).attr('selected', false); });
    });

    function endWait() {
        alert("Изменения успешно сохранены");
        if(reload){
            window.location.reload();
        }
    }

</script>